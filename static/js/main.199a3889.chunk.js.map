{"version":3,"sources":["component/Navbar/Navbar.js","component/searchForm/SearchForm.js","component/ChangeLocation/ChangeLocation.js","component/Home/Home.js","Main.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","react_router_dom","to","className","SearchForm","props","autoComplete","onSubmit","getWeatherInfo","value","state","text","onChange","onChangeHandler","type","placeholder","onClick","SearchListHandle","searchValu","slice","map","item","index","key","data-itemid","name","ChangeLocation","newcityFullname","newCity","list","autoCompleteText","_callee","e","search","url","data","regenerator_default","wrap","_context","prev","next","target","fetch","concat","sent","json","length","_this","setState","stop","_callee2","api","_context2","preventDefault","Object","toConsumableArray","city","location","country","temp","current","temp_c","icon","condition","console","log","event","this","getAttribute","component_searchForm_SearchForm","bind","src","Component","Home","firstRun","City","date","forecastDay","image","isDay","humidity","feelslike","wind","componentDidMount","localtime","feelslike_c","forecast","forecastday","wind_kph","day","alt","Main","component_Navbar_Navbar","react_router","path","exact","component","test","Boolean","window","hostname","match","ReactDOM","render","src_Main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.199a3889.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  const navStayle = {\r\n    color: \"white\"\r\n  };\r\n  return (\r\n    <nav>\r\n      <Link to=\"/\" className=\"link\">\r\n        <h2>Weather</h2>\r\n      </Link>\r\n      <ul className=\"nav-link\">\r\n        <Link to=\"/name\" className=\"link\">\r\n          <li>Change Location</li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./SearchForm.css\";\r\n\r\nconst SearchForm = props => {\r\n  return (\r\n    <div className=\"autoComplete\">\r\n      <form autoComplete=\"off\" onSubmit={props.getWeatherInfo}>\r\n        <input\r\n          value={props.state.text}\r\n          onChange={props.onChangeHandler}\r\n          type=\"text\"\r\n          placeholder={props.state.placeholder}\r\n        />\r\n        <input className=\"inputSubmit\" type=\"submit\" />\r\n      </form>\r\n\r\n      <ul onClick={props.SearchListHandle}>\r\n        {props.state.searchValu.slice(0, 4).map((item, index) => (\r\n          <li key={index} data-itemid={item.name}>\r\n            {item.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchForm;\r\n","import React, { Component } from \"react\";\r\nimport SearchForm from \"../searchForm/SearchForm\";\r\nimport \"./ChangeLocation.css\";\r\n\r\nclass ChangeLocation extends Component {\r\n  state = {\r\n    newcityFullname: \"\",\r\n    newCity: \"\",\r\n    placeholder: \"\",\r\n    searchValu: [],\r\n    list: []\r\n  };\r\n\r\n  onChangeHandler(event) {\r\n    this.setState({ text: event.target.value });\r\n    this.autoCompleteText(event);\r\n  }\r\n\r\n  autoCompleteText = async e => {\r\n    const search = e.target.value;\r\n    const url = await fetch(\r\n      `https://api.apixu.com/v1/search.json?key=1652ea732ca848b7bd6100429192205&q=${search}`\r\n    );\r\n    var data = await url.json();\r\n\r\n    if (search.length >= 3) {\r\n      this.setState({\r\n        searchValu: data,\r\n        newCity: search\r\n      });\r\n    } else {\r\n      this.setState({\r\n        searchValu: []\r\n      });\r\n    }\r\n  };\r\n\r\n  SearchListHandle(event) {\r\n    this.setState({\r\n      newcityFullname: event.target.getAttribute(\"data-itemid\"),\r\n      text: event.target.getAttribute(\"data-itemid\"),\r\n      searchValu: []\r\n    });\r\n    this.getWeatherInfo(event);\r\n  }\r\n\r\n  getWeatherInfo = async e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.newCity !== \"\") {\r\n      const api = await fetch(\r\n        `https://api.apixu.com/v1/forecast.json?key=1652ea732ca848b7bd6100429192205&q=${\r\n          this.state.newCity\r\n        }&days=6`\r\n      );\r\n      const data = await api.json();\r\n      this.setState({\r\n        newCity: \"\",\r\n        placeholder: this.state.text,\r\n        text: \"\",\r\n        list: [\r\n          ...this.state.list,\r\n          {\r\n            city: data.location.name,\r\n            country: data.location.country,\r\n            temp: data.current.temp_c,\r\n            icon: data.current.condition.icon\r\n          }\r\n        ]\r\n      });\r\n      console.log(this.state.list);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <SearchForm\r\n            state={this.state}\r\n            getWeatherInfo={this.getWeatherInfo.bind(this)}\r\n            onChangeHandler={this.onChangeHandler.bind(this)}\r\n            SearchListHandle={this.SearchListHandle.bind(this)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <ul className=\"search-list\">\r\n            {this.state.list.map((item, index) => (\r\n              <li key={index}>\r\n                <p>{item.city}</p>\r\n                <p>{item.country}</p>\r\n                <p>{item.temp}</p>\r\n                <img src={item.icon} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangeLocation;\r\n","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    firstRun: true,\r\n    placeholder: \"enter city\",\r\n    newCity: \"tehran\",\r\n    City: \"\",\r\n    date: \"\",\r\n    country: \"\",\r\n    condition: \"\",\r\n    temp: \"\",\r\n    forecastDay: [],\r\n    image: \"\",\r\n    searchValu: [],\r\n    text: \"\",\r\n    isDay: 0,\r\n    humidity: \"\",\r\n    feelslike: \"\",\r\n    wind: \"\"\r\n  };\r\n\r\n  componentDidMount = async e => {\r\n    if (this.state.newCity !== \"\") {\r\n      const api = await fetch(\r\n        `https://api.apixu.com/v1/forecast.json?key=1652ea732ca848b7bd6100429192205&q=tehran&days=6`\r\n      );\r\n      const data = await api.json();\r\n      this.setState({\r\n        City: data.location.name,\r\n        country: data.location.country,\r\n        date: data.location.localtime,\r\n        temp: data.current.temp_c,\r\n        image: data.current.condition.icon,\r\n        condition: data.current.condition.text,\r\n        text: \"\",\r\n        placeholder: this.state.text,\r\n        isDay: data.current.isDay,\r\n        humidity: data.current.humidity,\r\n        feelslike: data.current.feelslike_c,\r\n        forecastDay: data.forecast.forecastday,\r\n        wind: data.current.wind_kph\r\n      });\r\n      console.log(this.state.forecastDay);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <div className=\"base\">\r\n          <div className=\"location\">\r\n            {this.state.City},{this.state.country}\r\n          </div>\r\n          <div className=\"temp\">\r\n            <p className=\"tempc\">{this.state.temp}</p>\r\n            <p className=\"discription\">{this.state.condition}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"forcast-detail\">\r\n          <div className=\"forcast\">\r\n            <p>Forecast</p>\r\n            <ul className=\"ul\">\r\n              {this.state.forecastDay.slice(0, 5).map((item, index) => (\r\n                <li key={index}>\r\n                  <div className=\"forcast-list\">\r\n                    <p className=\"date\">{item.date}</p>\r\n                    <img\r\n                      className=\"icon\"\r\n                      src={item.day.condition.icon}\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"list-gap\" />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"detail\">\r\n            <img className=\"currentIcon\" src={this.state.image} alt=\"icon\" />\r\n            <p className=\"list-gap\" />\r\n            <p>Feels like : {this.state.feelslike} c</p>\r\n            <p className=\"list-gap\" />\r\n            <p>humidity : {this.state.humidity} %</p>\r\n            <p className=\"list-gap\" />\r\n            <p>Wind speed : {this.state.feelslike} kmh</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./component/Navbar/Navbar\";\r\nimport ChangeLocation from \"./component/ChangeLocation/ChangeLocation\";\r\nimport Home from \"./component/Home/Home\";\r\nimport \"./App.css\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/name\" component={ChangeLocation} test=\"gooz\" />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./Main\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}